import i18n from 'i18next';import { action, makeObservable, observable } from 'mobx';import { LoadingEnum, NotificationType } from '../Type/models';import {createAlert} from "../../common/components/alert";export class NotificationStore {	isLoading: LoadingEnum = LoadingEnum.initial;	notification: NotificationType | undefined = undefined;	switcherNotification = false;	serverResponse: string | undefined = undefined;	setIsLoading = (isLoading: LoadingEnum): void => {		this.isLoading = isLoading;	}; 	setNotification =  (		notification: NotificationType | undefined,		switcherNotification: boolean,		serverResponse: string | undefined = 'Операция прошла успешно',	): void => {		this.switcherNotification = switcherNotification;		this.notification = notification;		this.serverResponse = serverResponse;		createAlert({			title: 'Сообщение',			message: serverResponse,			buttons: [{text: 'Продолжить', style: "cancel"}]		})	};	constructor() {		makeObservable(this, {			isLoading: observable,			notification: observable,			switcherNotification: observable,			serverResponse: observable,			setIsLoading: action,			setNotification: action,		});	}}export default new NotificationStore();